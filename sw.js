// Auto-generated by PWA builder script.
importScripts('https://storage.googleapis.com/workbox-cdn/releases/7.0.0/workbox-sw.js');

if (workbox) {
    console.log(`Workbox is loaded.`);
    
    self.addEventListener('message', (event) => {
      if (event.data && event.data.type === 'SKIP_WAITING') {
        console.log('Service Worker received SKIP_WAITING message, activating now.');
        self.skipWaiting();
      }
    });

    workbox.precaching.precacheAndRoute([
    {
        "url": "icon-72.png",
        "revision": "d7e2fea916659bbf271b4632f028fed5"
    },
    {
        "url": "icon-96.png",
        "revision": "f1bdf68dd999551760088eb79f5cbcba"
    },
    {
        "url": "icon-128.png",
        "revision": "1ec8980d1a4a78149a5ec7aac0a52a79"
    },
    {
        "url": "icon-144.png",
        "revision": "70839b0a9ce56b64a72ca87b9c29f139"
    },
    {
        "url": "icon-152.png",
        "revision": "24fd20976f6dc6d81b99bdecd571fced"
    },
    {
        "url": "icon-192.png",
        "revision": "286958b45be08bdc916b8e3126b2203d"
    },
    {
        "url": "icon-384.png",
        "revision": "d3d46f60ff5014f7d85d047e1c55329f"
    },
    {
        "url": "icon-512.png",
        "revision": "1a98134a086859d517de611e9e0579bc"
    },
    {
        "url": "favicon.ico",
        "revision": "7cbcf8be98d3ce63133537d07504db0f"
    },
    {
        "url": ".gitattributes",
        "revision": "05bdb783ee6514c8c072e47680af8ff7"
    },
    {
        "url": "build pwa make html app offline and installable yasin best working re-run this for updates best for html only.py",
        "revision": "912a9d55d74613b8f4f07180d0df1fd3"
    },
    {
        "url": "Copy of index.html.txt",
        "revision": "c594d507f66dc45d705f8c51d130ef89"
    },
    {
        "url": "index.html",
        "revision": "d1b31f913dc44795a468a32a4674d90f"
    },
    {
        "url": "manifest.json",
        "revision": "13c88c9a47b4da9acfc58502f79f1a0e"
    },
    {
        "url": "offline.html",
        "revision": "93dd8135f88165fc1bbc0acf525cd1d3"
    },
    {
        "url": "qrcode.min.js",
        "revision": "517b55d3688ce9ef1085a3d9632bcb97"
    },
    {
        "url": "readme file for index.pdf",
        "revision": "1dbcb867741c91b4f2852491cd538bad"
    },
    {
        "url": "readme file for index.php.docx",
        "revision": "e5b10a2cd13f4ca4c21383cc364ead19"
    },
    {
        "url": "receipt-44221979.png",
        "revision": "87a8e4a6f7123dcf4ecc624d682dc571"
    },
    {
        "url": "receipt-44361536.png",
        "revision": "9433aed68cbbcf8be34e3297afc1b6b2"
    },
    {
        "url": "receipt-44819471.png",
        "revision": "55ba061702ca1d18d004d0c7e7a0b484"
    },
    {
        "url": "receipt-44910508.png",
        "revision": "b0f28da7e0696027cab37d6c9ce2c4f6"
    },
    {
        "url": "sw.js",
        "revision": "83e6a2b8fffc407226c40f862265b780"
    }
]);

    workbox.routing.registerRoute(
        ({request}) => request.destination === 'style' || request.destination === 'script',
        new workbox.strategies.StaleWhileRevalidate({ cacheName: 'asset-cache' })
    );

    workbox.routing.registerRoute(
        ({request}) => request.destination === 'image',
        new workbox.strategies.CacheFirst({
            cacheName: 'image-cache',
            plugins: [ new workbox.expiration.ExpirationPlugin({ maxEntries: 60, maxAgeSeconds: 30 * 24 * 60 * 60 }) ],
        })
    );

    workbox.routing.setCatchHandler(async ({event}) => {
        if (event.request.destination === 'document') {
            return await caches.match('offline.html') || Response.error();
        }
        return Response.error();
    });

} else {
    console.log(`Workbox failed to load.`);
}